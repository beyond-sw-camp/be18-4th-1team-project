name: backend-ci-push.yml

on:
  push:
    branches:
      - main
      - feature/30-backend-cd

jobs:
  build:
    name: Build & Push image
    runs-on: ubuntu-latest

    permissions:
      write-all

    services:
      mariadb:
        image: mariadb:11.8.2
        env:
          MYSQL_DATABASE: ${{ secrets.DATABASE }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
          MYSQL_USER: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          MYSQL_ROOT_HOST: '%'

        ports:
          - 3306:3306
        options: --health-cmd="healthcheck.sh --connect --innodb_initialized" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Make gradlew executable
        run: chmod +x ./backend/smerp/gradlew

      #컴파일(테스트 포함)
      - name: Build application
        working-directory: backend/smerp
        #build, test용 가짜 환경변수
        env:
          MYSQL_HOST: mariadb
          MYSQL_PORT: ${{ secrets.DB_PORT }}
          MYSQL_DATABASE: ${{ secrets.DATABASE }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          SPRING_DATASOURCE_DRIVER: ${{ secrets.SPRING_DATASOURCE_DRIVER }}
          SPRING_DATASOURCE_URL: jdbc:mariadb://localhost:3306/${{ secrets.DATABASE }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}
          ENCRYPT_SALT: ${{ secrets.ENCRYPT_SALT }}


        run: |
          echo "building application"
          ./gradlew build -PqueryDslVersion=${{ secrets.QUERYDSLVERSION }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          #access key, secret key
          username: ${{ secrets.BACK_DOCKER_USERNAME }}
          password: ${{ secrets.BACK_DOCKER_PASSWORD }}

      - name: Set IMAGE_TAG for later jobs
        run: echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: Build and push docker image
        env:
          DOCKER_USERNAME: ${{ secrets.BACK_DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.BACK_DOCKER_PASSWORD }}
          IMG_NAME: ${{ secrets.BACK_IMAGE_NAME }}
          QUERYDSLVERSION: ${{ secrets.QUERYDSLVERSION }}
        run: |
          docker build \
            -f backend/smerp/Dockerfile \
            --build-arg QUERYDSLVERSION=$QUERYDSLVERSION \
            -t $DOCKER_USERNAME/$IMG_NAME:$IMAGE_TAG .
          docker push $DOCKER_USERNAME/$IMG_NAME:$IMAGE_TAG
          
          
          #          docker build \
          #            -f backend/smerp/Dockerfile \
          #            --build-arg QUERYDSLVERSION=$QUERYDSLVERSION \
          #            -t $DOCKER_USERNAME/$IMG_NAME:$IMAGE_TAG .
          #          docker push $DOCKER_USERNAME/$IMG_NAME:latest