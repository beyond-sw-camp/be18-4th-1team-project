plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.domino'
version = '0.0.1-SNAPSHOT'
description = 'SMERP project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starter Dependencies
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    //envers
    implementation 'org.hibernate.orm:hibernate-envers'

	// DB Driver
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// QueryDsl
	// Open Feign QueryDSL (latest security patched version)
	implementation("io.github.openfeign.querydsl:querydsl-core:${queryDslVersion}")
	implementation("io.github.openfeign.querydsl:querydsl-jpa:$queryDslVersion")

	// QueryDSL annotation processor - 별도 configuration으로 분리
	annotationProcessor("io.github.openfeign.querydsl:querydsl-apt:$queryDslVersion:jpa")
	annotationProcessor("jakarta.annotation:jakarta.annotation-api")
	annotationProcessor("jakarta.persistence:jakarta.persistence-api")

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 설정
def querydslSrcDir = 'src/main/generated'

// querydsl QClass 파일 생성 위치 지정
tasks.withType(JavaCompile).configureEach {
	options.getGeneratedSourceOutputDirectory().set(file(querydslSrcDir))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [querydslSrcDir]
	test.java.srcDirs += [querydslSrcDir]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(querydslSrcDir)
}